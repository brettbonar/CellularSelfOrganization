{"name":"Identification of Self-Organizing Multicellular Systems","tagline":"","body":"### Cellular Self-Organization\r\nSelf-organization could be defined as the undirected movement of a chaotic structure into an ordered one. In a biological system, this may be seen as a formation of cells gradually reforms into a regular arrangement. Such arrangements could be lattices or grids that are identified as having regular or repeating patterns. These systems may prove valuable to disciplines such as medicine and bioengineering. Determining the behaviors with which to compose a self-organizing system is a nontrivial task. While many such systems have already been identified, the considerable amount of traits comprising cellular behaviors would make an exhaustive search of undiscovered systems impossible.\r\n\r\nAdd images of organized cells.\r\n\r\n### Why?\r\nSelf-organizing biological systems are potentially useful in medical and bioengineering fields.\r\n\r\n### Method\r\nThis project implements a simple hill climber written in Python that works on a limited set of cellular behaviors from the CompuCell3D simulator. An evaluation of the set complexity of the simulated result of a biological system is used to determine self-organization and regularity (i.e. the fitness function).\r\n\r\nWhile CompuCell3D supports 3D cells, this simulation is limited to 2D for the purpose of simplicity and simulation speed. The CompuCell3D simulator supports a large number of cell attributes and behaviors. These have been narrowed down to a few variable parameters:\r\n* Contact (adhesion) energy between cells\r\n* Diffusion field parameters:\r\n * Decay rate\r\n * Diffusion constant\r\n * Secretion rate for each cell type\r\n* Chemotaxis for each cell type\r\n\r\nThe diffusion field and chemotaxis parameters are directly related. This project uses the CompuCell3D DiffusionSolverFE plugin. The secretion rate is the amount of chemical field that is secreted by each cell type. Chemotaxis then defines the rate at which cells are attracted to the chemical field. Chemotaxis is one of the most important and useful cellular properties for creating self-organizing biological systems.\r\n\r\nThe hill climber begins with a random configuration of the above parameters in addition to a random number of cell types (currently just one or two) and random volume for each type of cell. Number of cell types and cell volume are not changed between iterations. The initial configuration is run through the CompuCell3D simulator four times with different random seeds to generate four distinct results. The set complexity is calculated using the four final outputs as the set.\r\n\r\nThe algorithm then repeatedly performs a random walk one of the variable parameters. If the resulting set complexity of the simulation has a higher complexity than the previous best then this is taken as the new best result. This is repeated until no improvements have been made for a number of iterations, at which point the hill climber terminates and the latest best is taken as the most complex result.\r\n\r\nDescription of set complexity.\r\n\r\nSample of contact parameters\r\n\r\n### Results\r\nThe following charts show some of the results of a few initial runs of the hill climber. The CompuCell3D simulator was run on each iteration for 1000 MCS and the final output of four runs with different random seeds were evaluated for complexity.\r\n\r\n[Simulation Video](https://www.dropbox.com/s/n7m1bdoooxsxebt/HillClimberExample.avi?dl=0)\r\n\r\nTODO video of a single simulation with high complexity\r\nTODO video slideshow of improvement over time\r\n\r\nImprovement of complexity over time (iteration of hill climber).\r\n![](http://i1379.photobucket.com/albums/ah131/bbonar/Complexity_zpsb9aegc57.png)\r\n\r\nThis shows the results of the simulation of the initial configuration after 1000 MCS\r\n![](http://i1379.photobucket.com/albums/ah131/bbonar/Worst_zpsdvknzinq.png)\r\n\r\nAnd the results of the best simulation (highest complexity) after 1000 MCS\r\n![](http://i1379.photobucket.com/albums/ah131/bbonar/Best_zpsu7zmfcbq.png)\r\n\r\nThis second chart shows the value of the best complexity over time. Note how it quickly reaches a local maxima. This is generally not ideal as it potentially excludes better results. This should be able to be solved by increasing the number of iterations, simulation steps, expanding the list of variable parameters, and refining valid parameter ranges.\r\n\r\n![](http://i1379.photobucket.com/albums/ah131/bbonar/BestComplexity_zps3kxmqejb.png)\r\n\r\n### Issues\r\nWhile this method works well in distinguishing between random and organized systems, it does not always identify what we may consider to be the most \"complex\" result. Take the following two images for example. Both were generated throughout the course of one run of the hill climber. The first is an ideal result in which cells form an organized network pattern. The second is less interesting, but still considered to be more \"complex\". This is believed to be an inherent flaw in using a general method for determining complexity.\r\n\r\nFuture work may include developing more specialized algorithms to better identify complex patterns as we perceive them.\r\n\r\n# Instructions\r\n1. Install CompuCell3D simulator\r\n2. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}